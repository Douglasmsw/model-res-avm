type,name,stage_number,stage_name,s3_bucket,path_dvc,path_local,path_s3,athena_table,observation_unit,primary_key,notes
input,training,0,ingest,ccao-data-dvc-us-east-1,input/training_data.parquet.dvc,input/training_data.parquet,,,pin,"year, meta_pin","Excludes any multi-card PINs, therefore unit of observation is PIN"
input,assessment,0,ingest,ccao-data-dvc-us-east-1,input/assessment_data.parquet.dvc,input/assessment_data.parquet,,,improvement,"year, meta_pin, meta_card_num",Includes all improvements that need valuation
output,metadata,1,setup,ccao-data-warehouse-us-east-1,,output/metadata/model_metadata.parquet,model/metadata/year={year}/{run_id}.parquet,metadata,model run,"year, run_id",Information about each run
output,parameter_search,2,train,ccao-data-warehouse-us-east-1,,output/parameter_search/model_parameter_search.parquet,model/parameter_search/year={year}/{run_id}.parquet,parameter_search,model cv fold,"year, run_id, configuration, fold_id",Each row is the result from one fold assessment from one iteration
output,parameter_raw,2,train,ccao-data-warehouse-us-east-1,,output/parameter_search/model_parameter_search.parquet,model/parameter_raw/year={year}/{run_id}.parquet,,model cv fold,"year, run_id, configuration, fold_id",Raw output from CV/tuning. Not useful in Athena but needed to make models reproducible
output,parameter_final,2,train,ccao-data-warehouse-us-east-1,,output/parameter_final/model_parameter_final.parquet,model/parameter_final/year={year}/{run_id}.parquet,parameter_final,model run,"year, run_id","Best parameters chosen for each run, as chosen by tune::select_best()"
output,parameter_range,2,train,ccao-data-warehouse-us-east-1,,output/parameter_range/model_parameter_range.parquet,model/parameter_range/year={year}/{run_id}.parquet,parameter_range,parameter,"year, run_id, parameter_name",CV search range per parameter per model run
intermediate,test,2,train,,,output/intermediate/model_test.parquet,,,pin,"year, meta_pin",Input test data with model prediction attached. Saved temporarily for use in evaluate stage
output,workflow_fit,2,train,ccao-data-warehouse-us-east-1,,output/workflow/fit/model_workflow_fit.zip,model/workflow/fit/year={year}/{run_id}.zip,,model run,,Trained model object saved for future use
output,workflow_recipe,2,train,ccao-data-warehouse-us-east-1,,output/workflow/recipe/model_workflow_recipe.rds,model/workflow/recipe/year={year}/{run_id}.rds,,model run,,Trained recipe object. Can be used to prepare new data in the same way as the original model training
intermediate,assessment,3,assess,,,output/intermediate/model_assessment.parquet,,,pin,"year, meta_pin",Assessment results AGGREGATED to the PIN level. Model predictions are added together in the case of multi-card PINs. This is the data used for performance evaluation by the evaluate stage
output,assessment,3,assess,ccao-data-warehouse-us-east-1,,output/assessment/model_assessment.parquet,model/assessment/,assessment,improvement,"year, run_id, township_code, pin, card",Assessment results at the improvement level. Multi-card PINs will have more than one row. NOTE: Each run adds new paritions to Athena which much be added via a Glue crawler. A lambda function currently triggers this crawler automatically
output,performance_test,4,evaluate,ccao-data-warehouse-us-east-1,,output/performance/model_performance_test.parquet,model/performance/year={year}/stage=test/{run_id}.parquet,performance,geography [by class],"year, run_id, stage, geography_type, geography_id, by_class, class",Peformance metrics broken out by class for different levels of geography
output,performance_assessment,4,evaluate,ccao-data-warehouse-us-east-1,,output/performance/model_performance_assessment.parquet,model/performance/year={year}/stage=assessment/{run_id}.parquet,performance,geography [by class],"year, run_id, stage, geography_type, geography_id, by_class, class",Peformance metrics broken out by class for different levels of geography
output,performance_quantile_test,4,evaluate,ccao-data-warehouse-us-east-1,,output/performance_quantile/model_performance_quantile_test.parquet,model/performance_quantile/year={year}/stage=test/{run_id}.parquet,performance_quantile,geography [by class] by quantile,"year, run_id, stage, geography_type, geography_id, by_class, class, quantile",Performance metrics by quantile within class and geography
output,performance_quantile_assessment,4,evaluate,ccao-data-warehouse-us-east-1,,output/performance_quantile/model_performance_quantile_assessment.parquet,model/performance_quantile/year={year}/stage=assessment/{run_id}.parquet,performance_quantile,geography [by class] by quantile,"year, run_id, stage, geography_type, geography_id, by_class, class, quantile",Performance metrics by quantile within class and geography
output,shap,5,interpret,ccao-data-warehouse-us-east-1,,output/shap/model_shap.parquet,model/shap/,shap,improvement,"year, run_id, township_code, pin, card",SHAP values for each feature of each improvement in the assessment data. NOTE: Each run adds new paritions to Athena which much be added via a Glue crawler. A lambda function currently triggers this crawler automatically
intermediate,timing,,all,,,output/intermediate/model_timing.parquet,,,model stage,"year, msg",Intermediate collection of timings for each stage. Finalized into one-row data frame in the finalize stage
output,timing,,all,ccao-data-warehouse-us-east-1,,output/timing/model_timing.parquet,model/timing/year={year}/{run_id}.parquet,timing,model run,"year, run_id","Each row represents the timing for one run, where columns represent the stages"
